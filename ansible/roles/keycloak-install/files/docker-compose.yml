services:
  keycloak:
    image: 127.0.0.1:5000/keycloak
    build: .
    command: start
    environment:
      KEYCLOAK_ADMIN: ne_bknn
      KEYCLOAK_ADMIN_PASSWORD: aboba1337#
      KC_DB: postgres
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: keycloak.bakunin.me
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_HTTP_ENABLED: "true"
      KC_PROXY: edge
      KC_HEALTH_ENABLED: "true"
    deploy:
      mode: replicated
      replicas: 3
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.keycloak.rule=Host(`keycloak.bakunin.me`)"
        - "traefik.http.routers.keycloak.entrypoints=websecure"
        - "traefik.http.routers.keycloak.tls.certresolver=myresolver"

        - "traefik.http.services.keycloak.loadbalancer.sticky.cookie=true"
        - "traefik.http.services.keycloak.loadbalancer.sticky.cookie.name=keycloak_sticky_cookie"

        - "traefik.http.services.keycloak.loadbalancer.server.port=8080"

        - "traefik.http.services.keycloak.loadbalancer.healthcheck.path=/health/live"
        - "traefik.http.services.keycloak.loadbalancer.healthcheck.interval=10s"
        - "traefik.http.services.keycloak.loadbalancer.healthcheck.timeout=3s"

        - "traefik.docker.network=traefik_traefik-net"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        delay: 20s
        order: stop-first
    networks:
      - traefik-net
      - internal
    depends_on: 
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/live"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 3m
  
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager  
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal
  
networks:
  traefik-net:
    name: "traefik_traefik-net"
    external: true
  internal:
    name: "internal"
    driver: overlay
    attachable: true

volumes:
  postgres_data: